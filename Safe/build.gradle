apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.triplet.play'

Properties local_properties = new Properties()
local_properties.load(new FileInputStream(rootProject.file('local.properties')))

apply from: '../settings/safe.gradle'


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "org.openintents.safe"
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        minSdkVersion 14
        targetSdkVersion rootProject.ext.targetSdkVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    lintOptions {
        abortOnError false
        ignoreWarnings ci
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def relativeRootDir = output.packageApplication.outputDirectory.toPath()
                            .relativize(rootDir.toPath()).toFile()
                    def file = output.outputFile
                    output.outputFileName = new File("$relativeRootDir/release", file.name.replace(".apk", "-" + defaultConfig.versionName + ".apk"))
                }
            }
        }
        alpha.initWith(release)
    }

    def propertyFile = new File(projectDir, "build-private.properties")
    if (propertyFile && propertyFile.exists()) {
        signingConfigs {
            release {
                Properties props = new Properties()
                props.load(new FileInputStream(propertyFile))

                storeFile file(props.getProperty("key.store"))
                storePassword props.getProperty("key.store.password")
                keyAlias props.getProperty("key.alias")
                keyPassword props.getProperty("key.alias.password")
            }
        }
        buildTypes.release.signingConfig signingConfigs.release
        println "Release apks will be signed!"
    } else {
        println "For signed release apks you need to create a build-private.properties file"
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

play {
    jsonFile = file(local_properties.service_account_json_file ?: 'no-file.json')
    track = System.getProperty('track', 'alpha')
    untrackOld = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.github.openintents:distribution:3.0.1'
    implementation 'com.jakewharton:butterknife:8.5.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    implementation 'com.android.support:support-annotations:28.0.0'
    implementation 'com.android.support:support-fragment:28.0.0'
    implementation 'com.android.support:preference-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'

    androidTestImplementation 'com.android.support:support-annotations:28.0.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:3.0.2"
}
repositories {
    mavenCentral()
}


